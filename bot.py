from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler, CallbackQueryHandler,
    MessageHandler, ContextTypes, filters
)

BOT_TOKEN = '7905345541:AAFBRykd84gokahizMRp3BhocYLd9FDREgM'
ADMIN_IDS = [1267048446, 7057690959]  # –¥–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
WAITING_FOR_APPLICATION = 1

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['state'] = None
    keyboard = [
        [InlineKeyboardButton("–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É", callback_data="apply")],
        [InlineKeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º", callback_data="contact")],
        [InlineKeyboardButton("–î–æ–Ω–∞—Ç", callback_data="donate")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    if update.message:
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)
    elif update.callback_query:
        await update.callback_query.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "apply":
        questions = (
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã:\n\n"
            "1. –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç –∏ —Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?\n"
            "(–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç, –Ω–∞–ø—Ä–∏–º–µ—Ä: 13+)\n\n"
            "2. –û—Ç–∫—É–¥–∞ —Ç—ã —É–∑–Ω–∞–ª –æ –Ω–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ?\n"
            "(YouTube, –¥—Ä—É–∑—å—è, TikTok, Discord –∏ —Ç.–¥.)\n\n"
            "3. –ü–æ—á–µ–º—É —Ç—ã —Ö–æ—á–µ—à—å –∏–≥—Ä–∞—Ç—å –∏–º–µ–Ω–Ω–æ —É –Ω–∞—Å?\n\n"
            "4. –ß–µ–º —Ç—ã —Ö–æ—á–µ—à—å –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ?\n"
            "(–§–µ—Ä–º—ã, —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ, –†–ü, PvP –∏ —Ç.–¥.)\n\n"
            "5. –¢–≤–æ–π –Ω–∏–∫ –≤ Minecraft (Java Edition)\n\n"
            "6. –ë—ã–ª –ª–∏ —É —Ç–µ–±—è –æ–ø—ã—Ç –∏–≥—Ä—ã –Ω–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö?\n"
            "(–î–∞/–ù–µ—Ç. –ï—Å–ª–∏ –¥–∞ ‚Äî –Ω–∞ –∫–∞–∫–∏—Ö?)\n\n"
            "7. –ù–∞—Ä—É—à–∞–ª –ª–∏ —Ç—ã –∫–æ–≥–¥–∞-–ª–∏–±–æ –ø—Ä–∞–≤–∏–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö?\n"
            "(–ë—É–¥—å —á–µ—Å—Ç–Ω—ã–º ‚Äî —ç—Ç–æ –Ω–µ –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è)\n\n"
            "8. –ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –º–∏–∫—Ä–æ—Ñ–æ–Ω / —Ç—ã –ø–æ–ª—å–∑—É–µ—à—å—Å—è –≥–æ–ª–æ—Å–æ–≤—ã–º —á–∞—Ç–æ–º?\n\n"
            "9. –£–º–µ–µ—à—å –ª–∏ —Ç—ã —Å—Ç—Ä–æ–∏—Ç—å –∫—Ä–∞—Å–∏–≤–æ? –ï—Å—Ç—å –ª–∏ —Å–∫—Ä–∏–Ω—ã/–º–∏—Ä?"
        )
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back_to_menu")]
        ])
        context.user_data['state'] = WAITING_FOR_APPLICATION
        await query.message.edit_text(questions, reply_markup=keyboard)

    elif query.data == "contact":
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back_to_menu")]
        ])
        context.user_data['state'] = None
        await query.message.edit_text(
            "–ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º, –Ω–∞–ø–∏—à–∏—Ç–µ: @h1zel1xiz",
            reply_markup=keyboard
        )

    elif query.data == "donate":
        donate_text = (
            "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n"
            "üé® –¶–≤–µ—Ç–Ω–æ–π –Ω–∏–∫ –≤ –∏–≥—Ä–µ.\n\n"
            "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Å–µ–±–µ —Ü–≤–µ—Ç–Ω–æ–π –Ω–∏–∫ –ª—é–±–æ–≥–æ —Ü–≤–µ—Ç–∞!\n\n"
            "üíµ –¶–µ–Ω–∞: 30 –≥—Ä–Ω (50 —Ä—É–±–ª–µ–π)\n"
            "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n"
            "üè∑ –ü—Ä–µ—Ñ–∏–∫—Å –≤ –∏–≥—Ä–µ.\n\n"
            "–í—ã –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–µ—Ñ–∏–∫—Å –≤ –∏–≥—Ä–µ, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥—É—Ç –≤–∏–¥–µ—Ç—å –≤—Å–µ –∏–≥—Ä–æ–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞.\n"
            "‚ùó –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∫–æ–≥–æ-—Ç–æ –æ—Å–∫–æ—Ä–±–ª—è—Ç—å –≤ –ø—Ä–µ—Ñ–∏–∫—Å–µ\n\n"
            "üíµ –¶–µ–Ω–∞: 80 –≥—Ä–Ω (150 —Ä—É–±–ª–µ–π)\n"
            "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n"
            "üîì –†–∞–∑–±–∞–Ω.\n\n"
            "–í—ã –±—É–¥–µ—Ç–µ —Ä–∞–∑–±–∞–Ω–µ–Ω—ã, –Ω–µ –≤–∞–∂–Ω–æ –æ—Ç —Ç–æ–≥–æ —á—Ç–æ –≤—ã —Å–¥–µ–ª–∞–ª–∏\n\n"
            "üíµ –¶–µ–Ω–∞: 200 –≥—Ä–Ω (373 —Ä—É–±–ª–µ–π)\n"
            "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n"
            "–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –¥–æ–Ω–∞—Ç–∞ –ø–∏—à–∏—Ç–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º: @h1zel1xiz\n\n"
            "‚ùó‚ùó‚ùó –í–ê–ñ–ù–û: –∫–æ–º–∏—Å—Å–∏—é –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –¥–æ–Ω–∞—Ç–∞."
        )
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back_to_menu")]
        ])
        context.user_data['state'] = None
        await query.message.edit_text(donate_text, reply_markup=keyboard)

    elif query.data == "back_to_menu":
        context.user_data['state'] = None
        await start(update, context)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def handle_application(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if context.user_data.get('state') != WAITING_FOR_APPLICATION:
        return

    application_text = update.message.text
    user_id = update.message.from_user.id
    username = update.message.from_user.username or "–ë–µ–∑ –Ω–∏–∫–∞"

    context.user_data['state'] = None

    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("‚úì –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"accept_{user_id}")],
        [InlineKeyboardButton("‚úó –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{user_id}")]
    ])

    msg = (
        f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç @{username} (ID: {user_id}):\n\n"
        f"{application_text}"
    )

    for admin_id in ADMIN_IDS:
        await context.bot.send_message(chat_id=admin_id, text=msg, reply_markup=keyboard)

    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.")
    context.application.chat_data[user_id] = {
        'username': username
    }

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∞–¥–º–∏–Ω–∞
async def admin_decision_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    data = query.data

    if data.startswith("accept_"):
        user_id = int(data.split("_")[1])
        await context.bot.send_message(
            chat_id=user_id,
            text="–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø—Ä–∏–Ω—è—Ç—ã. –í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É: https://t.me/+FvIzcsmlSbk2YmUy"
        )
        await context.bot.send_message(
            chat_id=query.from_user.id,
            text=f"‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç {user_id} –æ–¥–æ–±—Ä–µ–Ω–∞."
        )

    elif data.startswith("reject_"):
        user_id = int(data.split("_")[1])
        await context.bot.send_message(
            chat_id=user_id,
            text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞."
        )
        await context.bot.send_message(
            chat_id=query.from_user.id,
            text=f"‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç {user_id} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞."
        )

# –ö–æ–º–∞–Ω–¥–∞ /cancel
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['state'] = None
    await update.message.reply_text("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")

def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler, pattern="^(apply|contact|donate|back_to_menu)$"))
    app.add_handler(CallbackQueryHandler(admin_decision_handler, pattern="^(accept|reject)_"))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_application))
    app.add_handler(CommandHandler("cancel", cancel))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == '__main__':
    main()
